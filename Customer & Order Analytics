#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

--How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'orderid';

--How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'orderid';

--Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales feb
ON cust.order_id = feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'orderid';

--Which product was the cheapest one sold in January, and what was the price?
SELECT Product, price
FROM BIT_DB.JanSales
ORDER BY price asc LIMIT 1;

--What is the total revenue for each product sold in January?
SELECT Product, SUM(Quantity)*price AS revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'orderid'
GROUP BY Product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, 
location, 
Quantity, 
SUM(Quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(cust.acctnum),
AVG(Quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_id
WHERE Feb.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'orderid';

--Provide a list of orders placed between the dates of 02/13/19 & 02/18/19? 
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

--What was the destination of the order placed on 02/18/19 at 01:35?
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

--How many orders where palced on 02/18/19?
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--What types of Batteries were ordered in Febuary?
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

--What products were ordered in Febuary with a sales price ending in .99?
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT DISTINCT location, COUNT(orderID)
FROM JanSales
WHERE location LIKE '%NY%'
AND length (orderID) = 6
AND orderID <> 'orderid'
GROUP BY location
HAVING COUNT(orderID) > 2;

--How many of each type of headphone were sold in February?
SELECT DISTINCT Product, SUM(Quantity) 
AS Total_Purchased
FROM FebSales
WHERE Product like '%headphone%'
GROUP BY Product;

--What was the average amount spent per account in February?
SELECT AVG(Quantity*price) AS Avg_Amount_Spent
FROM FebSales Feb
LEFT JOIN customers cust
ON Feb.orderID = cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'orderID';

--What was the average quantity of products purchased per account in February?
SELECT SUM(Quantity) / count(cust.acctnum) AS Avg_Purchase_Per_Acct
FROM FebSales Feb
LEFT JOIN customers cust
ON Feb.orderID = cust.order_id
WHERE length(orderid) = 6
AND orderid <> 'orderID';

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1;
